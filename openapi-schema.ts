/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/snippets/": {
    /** List snippets. */
    get: operations["listSnippets"];
    /** Create snippet. */
    post: operations["createSnippet"];
  };
  "/snippets/{id}/": {
    /** Retrieve snippet. */
    get: operations["retrieveSnippet"];
    /** Update snippet */
    put: operations["updateSnippet"];
    /** Delete snippet. */
    delete: operations["destroySnippet"];
    /** Patch snippet. */
    patch: operations["partialUpdateSnippet"];
  };
  "/snippets/{id}/highlight/": {
    /** Render highlighted HTML for snippet. */
    get: operations["highlightSnippet"];
  };
  "/users/": {
    /** List users. */
    get: operations["listUsers"];
  };
  "/users/{id}/": {
    /** Retrieve user. */
    get: operations["retrieveUser"];
  };
}

export interface components {
  schemas: {
    Snippet: {
      url?: string;
      id?: number;
      highlight?: string;
      owner?: string;
      title?: string;
      code: string;
      linenos?: boolean;
      language?:
        | "abap"
        | "abnf"
        | "ada"
        | "adl"
        | "agda"
        | "aheui"
        | "ahk"
        | "alloy"
        | "amdgpu"
        | "ampl"
        | "antlr"
        | "antlr-as"
        | "antlr-cpp"
        | "antlr-csharp"
        | "antlr-java"
        | "antlr-objc"
        | "antlr-perl"
        | "antlr-python"
        | "antlr-ruby"
        | "apacheconf"
        | "apl"
        | "applescript"
        | "arduino"
        | "arrow"
        | "as"
        | "as3"
        | "aspectj"
        | "aspx-cs"
        | "aspx-vb"
        | "asy"
        | "at"
        | "augeas"
        | "autoit"
        | "awk"
        | "bare"
        | "basemake"
        | "bash"
        | "bat"
        | "bbcbasic"
        | "bbcode"
        | "bc"
        | "befunge"
        | "bib"
        | "blitzbasic"
        | "blitzmax"
        | "bnf"
        | "boa"
        | "boo"
        | "boogie"
        | "brainfuck"
        | "bst"
        | "bugs"
        | "c"
        | "c-objdump"
        | "ca65"
        | "cadl"
        | "camkes"
        | "capdl"
        | "capnp"
        | "cbmbas"
        | "cddl"
        | "ceylon"
        | "cfc"
        | "cfengine3"
        | "cfm"
        | "cfs"
        | "chai"
        | "chapel"
        | "charmci"
        | "cheetah"
        | "cirru"
        | "clay"
        | "clean"
        | "clojure"
        | "clojurescript"
        | "cmake"
        | "cobol"
        | "cobolfree"
        | "coffee-script"
        | "common-lisp"
        | "componentpascal"
        | "console"
        | "control"
        | "coq"
        | "cpp"
        | "cpp-objdump"
        | "cpsa"
        | "cr"
        | "crmsh"
        | "croc"
        | "cryptol"
        | "csharp"
        | "csound"
        | "csound-document"
        | "csound-score"
        | "css"
        | "css+django"
        | "css+erb"
        | "css+genshitext"
        | "css+lasso"
        | "css+mako"
        | "css+mozpreproc"
        | "css+myghty"
        | "css+php"
        | "css+smarty"
        | "cucumber"
        | "cuda"
        | "cypher"
        | "cython"
        | "d"
        | "d-objdump"
        | "dart"
        | "dasm16"
        | "delphi"
        | "devicetree"
        | "dg"
        | "diff"
        | "django"
        | "docker"
        | "doscon"
        | "dpatch"
        | "dtd"
        | "duel"
        | "dylan"
        | "dylan-console"
        | "dylan-lid"
        | "earl-grey"
        | "easytrieve"
        | "ebnf"
        | "ec"
        | "ecl"
        | "eiffel"
        | "elixir"
        | "elm"
        | "emacs"
        | "email"
        | "erb"
        | "erl"
        | "erlang"
        | "evoque"
        | "execline"
        | "extempore"
        | "ezhil"
        | "factor"
        | "fan"
        | "fancy"
        | "felix"
        | "fennel"
        | "fish"
        | "flatline"
        | "floscript"
        | "forth"
        | "fortran"
        | "fortranfixed"
        | "foxpro"
        | "freefem"
        | "fsharp"
        | "fstar"
        | "futhark"
        | "gap"
        | "gas"
        | "gdscript"
        | "genshi"
        | "genshitext"
        | "glsl"
        | "gnuplot"
        | "go"
        | "golo"
        | "gooddata-cl"
        | "gosu"
        | "graphviz"
        | "groff"
        | "groovy"
        | "gst"
        | "haml"
        | "handlebars"
        | "haskell"
        | "haxeml"
        | "hexdump"
        | "hlsl"
        | "hsail"
        | "hspec"
        | "html"
        | "html+cheetah"
        | "html+django"
        | "html+evoque"
        | "html+genshi"
        | "html+handlebars"
        | "html+lasso"
        | "html+mako"
        | "html+myghty"
        | "html+ng2"
        | "html+php"
        | "html+smarty"
        | "html+twig"
        | "html+velocity"
        | "http"
        | "hx"
        | "hybris"
        | "hylang"
        | "i6t"
        | "icon"
        | "idl"
        | "idris"
        | "iex"
        | "igor"
        | "inform6"
        | "inform7"
        | "ini"
        | "io"
        | "ioke"
        | "irc"
        | "isabelle"
        | "j"
        | "jags"
        | "jasmin"
        | "java"
        | "javascript+mozpreproc"
        | "jcl"
        | "jlcon"
        | "js"
        | "js+cheetah"
        | "js+django"
        | "js+erb"
        | "js+genshitext"
        | "js+lasso"
        | "js+mako"
        | "js+myghty"
        | "js+php"
        | "js+smarty"
        | "jsgf"
        | "json"
        | "jsonld"
        | "jsp"
        | "julia"
        | "juttle"
        | "kal"
        | "kconfig"
        | "kmsg"
        | "koka"
        | "kotlin"
        | "lagda"
        | "lasso"
        | "lcry"
        | "lean"
        | "less"
        | "lhs"
        | "lidr"
        | "lighty"
        | "limbo"
        | "liquid"
        | "live-script"
        | "llvm"
        | "llvm-mir"
        | "llvm-mir-body"
        | "logos"
        | "logtalk"
        | "lsl"
        | "lua"
        | "make"
        | "mako"
        | "maql"
        | "mask"
        | "mason"
        | "mathematica"
        | "matlab"
        | "matlabsession"
        | "md"
        | "mime"
        | "minid"
        | "modelica"
        | "modula2"
        | "monkey"
        | "monte"
        | "moocode"
        | "moon"
        | "mosel"
        | "mozhashpreproc"
        | "mozpercentpreproc"
        | "mql"
        | "ms"
        | "mscgen"
        | "mupad"
        | "mxml"
        | "myghty"
        | "mysql"
        | "nasm"
        | "ncl"
        | "nemerle"
        | "nesc"
        | "newlisp"
        | "newspeak"
        | "ng2"
        | "nginx"
        | "nim"
        | "nit"
        | "nixos"
        | "notmuch"
        | "nsis"
        | "numpy"
        | "nusmv"
        | "objdump"
        | "objdump-nasm"
        | "objective-c"
        | "objective-c++"
        | "objective-j"
        | "ocaml"
        | "octave"
        | "odin"
        | "ooc"
        | "opa"
        | "openedge"
        | "pacmanconf"
        | "pan"
        | "parasail"
        | "pawn"
        | "peg"
        | "perl"
        | "perl6"
        | "php"
        | "pig"
        | "pike"
        | "pkgconfig"
        | "plpgsql"
        | "pointless"
        | "pony"
        | "postgresql"
        | "postscript"
        | "pot"
        | "pov"
        | "powershell"
        | "praat"
        | "prolog"
        | "promql"
        | "properties"
        | "protobuf"
        | "ps1con"
        | "psql"
        | "psysh"
        | "pug"
        | "puppet"
        | "py2tb"
        | "pycon"
        | "pypylog"
        | "pytb"
        | "python"
        | "python2"
        | "qbasic"
        | "qml"
        | "qvto"
        | "racket"
        | "ragel"
        | "ragel-c"
        | "ragel-cpp"
        | "ragel-d"
        | "ragel-em"
        | "ragel-java"
        | "ragel-objc"
        | "ragel-ruby"
        | "rb"
        | "rbcon"
        | "rconsole"
        | "rd"
        | "reason"
        | "rebol"
        | "red"
        | "redcode"
        | "registry"
        | "resource"
        | "rexx"
        | "rhtml"
        | "ride"
        | "rnc"
        | "roboconf-graph"
        | "roboconf-instances"
        | "robotframework"
        | "rql"
        | "rsl"
        | "rst"
        | "rts"
        | "rust"
        | "sarl"
        | "sas"
        | "sass"
        | "sc"
        | "scala"
        | "scaml"
        | "scdoc"
        | "scheme"
        | "scilab"
        | "scss"
        | "sgf"
        | "shen"
        | "shexc"
        | "sieve"
        | "silver"
        | "singularity"
        | "slash"
        | "slim"
        | "slurm"
        | "smali"
        | "smalltalk"
        | "smarty"
        | "sml"
        | "snobol"
        | "snowball"
        | "solidity"
        | "sourceslist"
        | "sp"
        | "sparql"
        | "spec"
        | "splus"
        | "sql"
        | "sqlite3"
        | "squidconf"
        | "ssp"
        | "stan"
        | "stata"
        | "swift"
        | "swig"
        | "systemverilog"
        | "tads3"
        | "tap"
        | "tasm"
        | "tcl"
        | "tcsh"
        | "tcshcon"
        | "tea"
        | "termcap"
        | "terminfo"
        | "terraform"
        | "tex"
        | "text"
        | "thrift"
        | "tid"
        | "tnt"
        | "todotxt"
        | "toml"
        | "trac-wiki"
        | "treetop"
        | "ts"
        | "tsql"
        | "ttl"
        | "turtle"
        | "twig"
        | "typoscript"
        | "typoscriptcssdata"
        | "typoscripthtmldata"
        | "ucode"
        | "unicon"
        | "urbiscript"
        | "usd"
        | "vala"
        | "vb.net"
        | "vbscript"
        | "vcl"
        | "vclsnippets"
        | "vctreestatus"
        | "velocity"
        | "verilog"
        | "vgl"
        | "vhdl"
        | "vim"
        | "wdiff"
        | "webidl"
        | "whiley"
        | "x10"
        | "xml"
        | "xml+cheetah"
        | "xml+django"
        | "xml+erb"
        | "xml+evoque"
        | "xml+lasso"
        | "xml+mako"
        | "xml+myghty"
        | "xml+php"
        | "xml+smarty"
        | "xml+velocity"
        | "xorg.conf"
        | "xquery"
        | "xslt"
        | "xtend"
        | "xul+mozpreproc"
        | "yaml"
        | "yaml+jinja"
        | "yang"
        | "zeek"
        | "zephir"
        | "zig";
      style?:
        | "abap"
        | "algol"
        | "algol_nu"
        | "arduino"
        | "autumn"
        | "borland"
        | "bw"
        | "colorful"
        | "default"
        | "emacs"
        | "friendly"
        | "fruity"
        | "igor"
        | "inkpot"
        | "lovelace"
        | "manni"
        | "material"
        | "monokai"
        | "murphy"
        | "native"
        | "paraiso-dark"
        | "paraiso-light"
        | "pastie"
        | "perldoc"
        | "rainbow_dash"
        | "rrt"
        | "sas"
        | "solarized-dark"
        | "solarized-light"
        | "stata"
        | "stata-dark"
        | "stata-light"
        | "tango"
        | "trac"
        | "vim"
        | "vs"
        | "xcode"
        | "zenburn";
      owner_url?: string;
    };
    User: {
      url?: string;
      id?: number;
      /** Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
      username: string;
      snippets?: string[];
    };
  };
}

export interface operations {
  /** List snippets. */
  listSnippets: {
    parameters: {
      query: {
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            count?: number;
            next?: string | null;
            previous?: string | null;
            results?: components["schemas"]["Snippet"][];
          };
        };
      };
    };
  };
  /** Create snippet. */
  createSnippet: {
    parameters: {};
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Snippet"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Snippet"];
        "application/x-www-form-urlencoded": components["schemas"]["Snippet"];
        "multipart/form-data": components["schemas"]["Snippet"];
      };
    };
  };
  /** Retrieve snippet. */
  retrieveSnippet: {
    parameters: {
      path: {
        /** A unique integer value identifying this snippet. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Snippet"];
        };
      };
    };
  };
  /** Update snippet */
  updateSnippet: {
    parameters: {
      path: {
        /** A unique integer value identifying this snippet. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Snippet"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Snippet"];
        "application/x-www-form-urlencoded": components["schemas"]["Snippet"];
        "multipart/form-data": components["schemas"]["Snippet"];
      };
    };
  };
  /** Delete snippet. */
  destroySnippet: {
    parameters: {
      path: {
        /** A unique integer value identifying this snippet. */
        id: string;
      };
    };
    responses: {
      204: never;
    };
  };
  /** Patch snippet. */
  partialUpdateSnippet: {
    parameters: {
      path: {
        /** A unique integer value identifying this snippet. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Snippet"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Snippet"];
        "application/x-www-form-urlencoded": components["schemas"]["Snippet"];
        "multipart/form-data": components["schemas"]["Snippet"];
      };
    };
  };
  /** Render highlighted HTML for snippet. */
  highlightSnippet: {
    parameters: {
      path: {
        /** A unique integer value identifying this snippet. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "text/html": components["schemas"]["Snippet"];
        };
      };
    };
  };
  /** List users. */
  listUsers: {
    parameters: {
      query: {
        /** A page number within the paginated result set. */
        page?: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": {
            count?: number;
            next?: string | null;
            previous?: string | null;
            results?: components["schemas"]["User"][];
          };
        };
      };
    };
  };
  /** Retrieve user. */
  retrieveUser: {
    parameters: {
      path: {
        /** A unique integer value identifying this user. */
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
}
